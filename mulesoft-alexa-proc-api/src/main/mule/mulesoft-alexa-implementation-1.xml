<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">
	<flow name="place-market-order-flow" doc:id="c675dc17-91b3-4e17-ae0c-26d7105a623a" >
		<choice doc:name="Choice" doc:id="7a5d265f-42e5-43ba-b95d-67dba232fdc4" >
			<when expression='#[payload.request.intent.confirmationStatus == "CONFIRMED"]'>
				<ee:transform doc:name="Store slots values" doc:id="b8e7b12e-e281-487e-9df2-b769af8c1e9b" >
					<ee:message />
					<ee:variables >
						<ee:set-variable variableName="cryptoName" ><![CDATA[%dw 2.0
output application/json
---
payload.request.intent.slots.crypto.resolutions.resolutionsPerAuthority.values[0][0].value.name]]></ee:set-variable>
						<ee:set-variable variableName="amount" ><![CDATA[%dw 2.0
output application/json
---
payload.request.intent.slots.amount.value as Number]]></ee:set-variable>
						<ee:set-variable variableName="marketType" ><![CDATA[%dw 2.0
output application/json
---
payload.request.intent.slots.marketType.value ]]></ee:set-variable>
						<ee:set-variable variableName="type" ><![CDATA[%dw 2.0
output application/json
---
payload.request.intent.slots.'type'.value ]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<flow-ref doc:name="call-coinmarket-sys-api-flow" doc:id="6d077c7d-a2c8-4c67-b8a8-781eae4b7b26" name="call-coinmarket-sys-api-flow" />
				<set-variable value="#[payload.symbol]" doc:name="symbol" doc:id="f12672f8-4273-405f-9a9d-1ab41c3df541" variableName="symbol" />
				<try doc:name="Try" doc:id="698379e9-b61d-4080-936c-bb495f64bfc7" >
					<http:request method="POST" doc:name="POST-Call to Binance System API to place Market order" doc:id="6dcbe410-2486-484d-a46d-a2a00164688b" url="http://mulesoft-alexa-sys-api.us-e2.cloudhub.io/marketOrder">
						<http:body ><![CDATA[#[output json
---
 {
    symbol: vars.symbol++"USDT",
    side: upper(vars."type"),
    "type": upper(vars.marketType),
    quoteOrderQty: vars.amount ,
    
}]]]></http:body>
					</http:request>
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="b0aa1c9f-aa45-410d-8a3b-e74c0385d4d3" type="ANY" >
							<ee:transform doc:name="Transform Message" doc:id="e27123bb-e895-4280-87ef-d3d3b4f6b4bf" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
error.errorMessage.payload]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
				<ee:transform doc:name="Response to AVS for PlaceMarketOrder" doc:id="e2da0d51-4949-4a90-8478-4219d639cee4">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
 {
 		"version": "1.0",
		"response": {
			"outputSpeech": {
				"type": "SSML",
				"ssml": if(vars.amount > 1)
				"<speak>A "++ vars.marketType  ++ " order for " ++ vars.cryptoName ++ " has been placed for the sum..." ++ vars.amount ++ " dollars. </speak>"
				else
				"<speak>A " ++ vars.marketType  ++ " order for " ++ vars.cryptoName ++ " has been placed for the sum... " ++ vars.amount ++ " dollar. </speak>"
			},
			 "card": {
      "type": "Standard",
      "title": "Place Market Order : ",
      "text": if(vars.amount > 1)
      vars.marketType  ++ " order for " ++ vars.cryptoName ++ " has been placed for the sum " ++ vars.amount ++ " dollars."
      else
      vars.marketType  ++ " order for " ++ vars.cryptoName ++ " has been placed for the sum " ++ vars.amount ++ " dollar." ,
      "image": {
        "largeImageUrl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRKv2Wkxxy-IJdGCyQrs98sfozKS9RoNS2FHg&usqp=CAU"
      }
    },
			"reprompt": {
				"outputSpeech": {
					"type": "SSML",
					"ssml": "<speak>try again</speak>"
				}
			},
			"shouldEndSession": false
			}

	}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Store slots values" doc:id="28e7d082-491a-4a8c-81f1-16f44284ab57" >
					<ee:message />
					<ee:variables >
						<ee:set-variable variableName="marketType" ><![CDATA[%dw 2.0
output application/json
---
payload.request.intent.slots.marketType.value ]]></ee:set-variable>
						<ee:set-variable variableName="cryptoName" ><![CDATA[%dw 2.0
output application/json
---
payload.request.intent.slots.crypto.resolutions.resolutionsPerAuthority.values[0][0].value.name]]></ee:set-variable>
						<ee:set-variable variableName="amount" ><![CDATA[%dw 2.0
output application/json
---
payload.request.intent.slots.amount.value as Number]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<ee:transform doc:name="Response to AVS for PlaceMarketOrder" doc:id="2826f7c4-2145-406f-8e3c-9e062e948578" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
 {
 		"version": "1.0",
		"response": {
			"outputSpeech": {
				"type": "SSML",
				"ssml": "<speak>Thank you for confirming..." ++ vars.marketType  ++ " order for " ++ vars.cryptoName ++ " has been cancelled for an amount... " ++ vars.amount ++ " dollars.</speak>"
			},
			 "card": {
      "type": "Standard",
      "title": "Place Market Order : ",
      "text": "Thank you for confirming..." ++ vars.marketType  ++ " order for " ++ vars.cryptoName ++ " has been cancelled for an amount... " ++ vars.amount ++ " dollars." ,
      "image": {
        "largeImageUrl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQgT22cgeeiJ-3ndk6rW90i85250JI2UEwDsQ&usqp=CAU"
      }
    },
			"reprompt": {
				"outputSpeech": {
					"type": "SSML",
					"ssml": "<speak>try again</speak>"
				}
			},
			"shouldEndSession": false
			}

	}
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</flow>
	<flow name="place-limit-order-flow" doc:id="c6740e77-ac9c-483d-bd0a-681b91826190">
		<choice doc:name="Choice" doc:id="b4897fef-b6a2-4de4-8a80-1aa0fecb9447">
			<when expression='#[payload.request.intent.confirmationStatus == "CONFIRMED"]'>
				<ee:transform doc:name="Store slots values" doc:id="bf2924c3-c593-421b-84f3-855907964eeb">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="cryptoName"><![CDATA[%dw 2.0
output application/json
---
payload.request.intent.slots.crypto.resolutions.resolutionsPerAuthority.values[0][0].value.name]]></ee:set-variable>
				<ee:set-variable variableName="amount"><![CDATA[%dw 2.0
output application/json
---
payload.request.intent.slots.amount.value as Number]]></ee:set-variable>
				<ee:set-variable variableName="price"><![CDATA[%dw 2.0
output application/json
---
payload.request.intent.slots.price.value as Number]]></ee:set-variable>
						<ee:set-variable variableName="limitType"><![CDATA[%dw 2.0
output application/json
---
payload.request.intent.slots.limitType.value ]]></ee:set-variable>
						<ee:set-variable variableName="type" ><![CDATA[%dw 2.0
output application/json
---
payload.request.intent.slots.'type'.value ]]></ee:set-variable>
			
</ee:variables>
		</ee:transform>
				<flow-ref doc:name="call-coinmarket-sys-api-flow" doc:id="4c242b66-ab68-4ee9-b42c-4452e64b8323" name="call-coinmarket-sys-api-flow" />
				<logger level="INFO" doc:name="Logger" doc:id="9398055c-20a1-470e-8c80-c832e3a0681a" />
				<set-variable value="#[payload.symbol]" doc:name="symbol" doc:id="19410653-f303-46e8-bc82-e5ff74f5f98d" variableName="symbol" />
				<set-variable value='#[(vars.amount/payload.price) as String {format: "0."} as Number]' doc:name="quantity" doc:id="841b091c-0fe1-4461-b7ad-7af0e44dffd7" variableName="quantity" />
				<try doc:name="Try" doc:id="55b1c199-b3fe-4670-b565-25e180cbdc6b">
					<http:request method="POST" doc:name="POST-Call to Binance System API to place Limit order" doc:id="1e9e5804-29e3-4f4d-84e0-e0fb75ff3121" url="http://mulesoft-alexa-sys-api.us-e2.cloudhub.io/limitOrder">
						<http:body ><![CDATA[#[output json

---
{
    symbol: vars.symbol++"USDT",
    side: upper(vars."type"),
    "type": upper(vars.limitType),
    timeInForce: "GTC",
    quantity: vars.quantity,
    price: vars.price,
	
	
}]]]></http:body>
					</http:request>
					<error-handler>
						<on-error-continue enableNotifications="true" logException="true" doc:name="Copy_of_On Error Continue" doc:id="ec44f46c-fee0-4a6e-aa13-a51336c90492" type="ANY">
							<ee:transform doc:name="Copy_of_Transform Message" doc:id="364da948-d8c2-4006-af77-f819cd4fd20c">
								<ee:message>
									<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
error.errorMessage.payload]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
				<ee:transform doc:name="Response to AVS for PlaceLimitOrder" doc:id="db2672d0-ed47-4a0e-8c25-fe9b123c0569">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
 {
 		"version": "1.0",
		"response": {
			"outputSpeech": {
				"type": "SSML",
				"ssml": if(vars.price > 1)
				"<speak>A "++ vars.limitType  ++ " order for " ++ vars.cryptoName ++ " has been placed the sum of... " ++ vars.amount ++ " dollars. When the order is fulfilled, you will receive " ++ vars.quantity ++ " " ++ vars.cryptoName ++ " for the price of... " ++ vars.price ++ " dollars .</speak>"
				else
				"<speak>A " ++ vars.limitType  ++ " order for " ++ vars.cryptoName ++ " has been placed the sum of... " ++ vars.amount ++ " dollars. When the order is fulfilled, you will receive " ++ vars.quantity ++ " " ++ vars.cryptoName ++ " for the price of... " ++ vars.price ++ " dollar .</speak>"
			},
			 "card": {
      "type": "Standard",
      "title": "Place Limit Order : ",
      "text": if(vars.price > 1)
     "A "++ vars.limitType  ++ " order for " ++ vars.cryptoName ++ " has been placed the sum of... " ++ vars.amount ++ " dollars. When the order is fulfilled, you will receive " ++ vars.quantity ++ " " ++ vars.cryptoName ++ " for the price of... " ++ vars.price ++ " dollars."
      else
     "A "++ vars.limitType  ++ " order for " ++ vars.cryptoName ++ " has been placed the sum of... " ++ vars.amount ++ " dollars. When the order is fulfilled, you will receive " ++ vars.quantity ++ " " ++ vars.cryptoName ++ " for the price of... " ++ vars.price ++ " dollar.",
      "image": {
        "largeImageUrl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRKv2Wkxxy-IJdGCyQrs98sfozKS9RoNS2FHg&usqp=CAU"
      }
    },
			"reprompt": {
				"outputSpeech": {
					"type": "SSML",
					"ssml": "<speak>try again</speak>"
				}
			},
			"shouldEndSession": false
			}

	}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			
</when>
			<otherwise>
				<ee:transform doc:name="Store slots values" doc:id="3154e754-9d86-46b5-b30e-fe56582a4d4a">
					<ee:message />
					<ee:variables>
						<ee:set-variable variableName="limitType"><![CDATA[%dw 2.0
output application/json
---
payload.request.intent.slots.limitType.value ]]></ee:set-variable>
						<ee:set-variable variableName="cryptoName"><![CDATA[%dw 2.0
output application/json
---
payload.request.intent.slots.crypto.resolutions.resolutionsPerAuthority.values[0][0].value.name]]></ee:set-variable>
						<ee:set-variable variableName="amount"><![CDATA[%dw 2.0
output application/json
---
payload.request.intent.slots.amount.value as Number]]></ee:set-variable>
						<ee:set-variable variableName="price"><![CDATA[%dw 2.0
output application/json
---
payload.request.intent.slots.price.value as Number]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<ee:transform doc:name="Response to AVS for PlaceLimitOrder" doc:id="dc413769-1fe8-4b7d-8b98-f3ea827aa17d">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
 {
 		"version": "1.0",
		"response": {
			"outputSpeech": {
				"type": "SSML",
				"ssml": "<speak>Thank you for confirming that your " ++ vars.limitType  ++ " order for " ++ vars.cryptoName ++ " has been cancelled for the sum of... " ++ vars.amount ++ " dollars.</speak>"
			},
			 "card": {
      "type": "Standard",
      "title": "Place Limit Order : ",
      "text": "Thank you for confirming that your " ++ vars.limitType  ++ " order for " ++ vars.cryptoName ++ " has been cancelled for the sum of... " ++ vars.amount ++ " dollars." ,
      "image": {
        "largeImageUrl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQgT22cgeeiJ-3ndk6rW90i85250JI2UEwDsQ&usqp=CAU"
      }
    },
			"reprompt": {
				"outputSpeech": {
					"type": "SSML",
					"ssml": "<speak>try again</speak>"
				}
			},
			"shouldEndSession": false
			}

	}
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</flow>
	<flow name="launch-intent-flow" doc:id="55ed550b-2bdd-47a4-8248-0a314430c276" >
		<choice doc:name="Choice" doc:id="986648d1-3341-4b50-8e20-8716922a999d">
					<when expression="#[payload.context.System.user.accessToken == null]">
						<ee:transform doc:name="Transform Message" doc:id="d52da393-da30-42ef-be9d-9d9608c083c8">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
 {
 		"version": "1.0",
		"response": {
			"outputSpeech": {
				"type": "SSML",
				"ssml": "<speak>Hi...Welcome to alexa trust wallet, your account is not linked with the skill. Please link your amazon alexa account with the skill via amazon alexa app for better experience. </speak>"
			},
			 "card": {
      "type": "Standard",
      "title": "Alexa Trust Wallet",
      "text": "\n List of Features :" ++ "\n - Current value of Crypto currency" ++ "\n - Store Holdings" ++ "\n - Remove Holdings" ++ "\n - Send Alert Notifications" ++ "\n - Trigger Trading Bot" ,
      "image": {
        "largeImageUrl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS--QkDCmYkwaD_Isel1gtfrNF7kawtDVxUjA&usqp=CAU"
      }
    },
			"reprompt": {
				"outputSpeech": {
					"type": "SSML",
					"ssml": "<speak>try again</speak>"
				}
			},
			"shouldEndSession": true
			}

	}
]]></ee:set-payload>
							</ee:message>
						</ee:transform>
					</when>
					<otherwise>
						<http:request method="GET" doc:name="Get User Info" doc:id="5b5e81d6-af82-4e84-a147-8559864c378f" config-ref="User_Profile_Request_Config" path="/profile" target="userInfo">
					<http:query-params ><![CDATA[#[output application/java
---
{
	access_token : payload.session.user.accessToken as String
}]]]></http:query-params>
				</http:request>
				<os:store doc:name="Store User Info" doc:id="7b71782e-5b1b-4ef4-bdf2-c5e8485d764f" key="#[vars.userInfo.email]" objectStore="Store_User_Info">
					<os:value ><![CDATA[#[vars.userInfo.name]]]></os:value>
				</os:store>
				<ee:transform doc:name="Response to AVS for LaunchRequest" doc:id="2217a07d-1b7e-49b2-9273-1719bc79881c">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
 {
 		"version": "1.0",
		"response": {
			"outputSpeech": {
				"type": "SSML",
				"ssml": "<speak>Hello " ++ vars.vars.userInfo.name ++ ", Mule Trading Bot extends a warm greeting to you. I'll be your Crypto pal, and I'll be able to help you with a wide range of chores. These are the services I am able to provide for you.
I can execute trading orders on your Binance account for you. In addition to trading, I can serve as your personal cryptocurrency wallet, enabling you to maintain your holdings from both centralised and decentralised exchanges.</speak>"
			},
			 "card": {
      "type": "Standard",
      "title": "Mule Trading Bot",
      "text": "Hello " ++ vars.vars.userInfo.name ++ ", Mule Trading Bot extends a warm greeting to you. I'll be your Crypto pal, and I'll be able to help you with a wide range of chores. These are the services I am able to provide for you.
I can execute trading orders on your Binance account for you. In addition to trading, I can serve as your personal cryptocurrency wallet, enabling you to maintain your holdings from both centralised and decentralised exchanges."  ,
      "image": {
        "largeImageUrl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS--QkDCmYkwaD_Isel1gtfrNF7kawtDVxUjA&usqp=CAU"
      }
    },
			"reprompt": {
				"outputSpeech": {
					"type": "SSML",
					"ssml": "<speak>try again</speak>"
				}
			},
			"shouldEndSession": false
			}

	}
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
					
</otherwise>
				</choice>
	</flow>
	<flow name="stop-intent-flow" doc:id="f8fcb4f9-939b-435b-a02f-7d6d2b28ddc1" >
		<ee:transform doc:name="Response to AVS for StopIntent" doc:id="d5cd99cc-39c1-4130-af82-1e2d6287e812">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
 {
 		"version": "1.0",
		"response": {
			"outputSpeech": {
				"type": "PlainText",
			    "text": "Thank you for using Mule trading Bot...have a great day. Good Bye! "
			},
			 "card": {
      "type": "Standard",
      "title": "Thank you",
      "text": "Thank you for using Mule trading Bot...have a great day. Good Bye!",
      "image": {
        "largeImageUrl": "https://i.imgur.com/5vpOoC6.jpg"
      }
    },
			"reprompt": {
				"outputSpeech": {
					"type": "SSML",
					"ssml": "<speak>try again</speak>"
				}
			},
			"shouldEndSession": true
			}

	}

]]></ee:set-payload>
					</ee:message>
				</ee:transform>
	</flow>
	<flow name="trending-intent-flow" doc:id="8746c025-5d01-40fb-b002-e39f595d6f71">
		<http:request method="GET" doc:name="GET Call to Coingecko System API" doc:id="7109b03b-5cdd-4a5b-8f9d-1963f84a025f" url="http://mulesoft-alexa-sys-api.us-e2.cloudhub.io/tredningCrypto" />
		<ee:transform doc:name="coingecko Response" doc:id="b1db82d6-3ee0-4611-a147-d4e6e623a758">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var a = payload.coins map ((item, index) -> 
upper(item.item.name)) 
---
a[0 to 5] joinBy  ", " ++ " and " ++ a[-1]]]></ee:set-payload>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="trend"><![CDATA[%dw 2.0
output application/java
---
(payload.coins map ((item, index) -> 
upper("/n " ++ item.item.name as String  )))]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="637e1f1f-bcbd-41f4-b120-917640405daa" message="#[vars.trend]" />
		<ee:transform doc:name="Response to AVS for TrendingCrypto" doc:id="9d78446f-92b8-4726-8e9a-5418e19a8611">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
 {
 		"version": "1.0",
		"response": {
			"outputSpeech": {
				"type": "PlainText",
			    "text": "According to coingecko, trending cryptocurrencies  are..." ++ payload
			},
			 "card": {
      "type": "Standard",
      "title": "Trending Crypto",
      "text": payload,
      "image": {
        "largeImageUrl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTxeDcaOcBcOmXYJzcFFOIgt2JspEiDdWd2mw&usqp=CAU"
        }
    },
			"reprompt": {
				"outputSpeech": {
					"type": "SSML",
					"ssml": "<speak>try again</speak>"
				}
			},
			"shouldEndSession": false
			}

	}

]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="cancel-all-open-orders-flow" doc:id="ca1ca0d5-8adb-41fe-92df-05e1e48f63d0" >
		<http:request method="GET" doc:name="Get Call System API to get open orders" doc:id="45e89eda-78f6-4e64-a7c6-e9423b1a9d18" url="http://mulesoft-alexa-sys-api.us-e2.cloudhub.io/openOrders">
		</http:request>
		<choice doc:name="Choice" doc:id="47131c3f-2a6d-4e1a-bed6-3f5f465d7ca8" >
			<when expression="#[isEmpty(payload)]">
				<ee:transform doc:name="Response to AVS for CancelOrder Intent" doc:id="33a61d03-e6c0-4b52-8fd0-c3a497bb8ee1" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
 {
 		"version": "1.0",
		"response": {
			"outputSpeech": {
				"type": "SSML",
				"ssml": "<speak>There are currently no open orders in your Binance Account that you can cancel.</speak>"
			},
			 "card": {
      "type": "Standard",
      "title": "Cancel All Orders :",
      "text": "There are currently no open orders in your Binance Account that you can cancel." ,
      "image": {
        "largeImageUrl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTfrJPVO0wTlNLIZJfLMvkZnS2VrZUkMYkLeA&usqp=CAU"
      }
    },
			"reprompt": {
				"outputSpeech": {
					"type": "SSML",
					"ssml": "<speak>try again</speak>"
				}
			},
			"shouldEndSession": false
			}

	}
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<foreach doc:name="For Each" doc:id="0bd1e366-9858-4d63-91d6-9b195e98a831" collection="#[payload]">
					<http:request method="DELETE" doc:name="Delete Call to System API to cancel open orders" doc:id="9fada418-8990-4c5d-83fe-0053467d55ec" url="http://mulesoft-alexa-sys-api.us-e2.cloudhub.io/cancelOrders">
				<http:body><![CDATA[#[output json
---
{
	symbol : payload.symbol
}]]]></http:body>
			</http:request>
				</foreach>
				<ee:transform doc:name="Response to AVS for CancelOrder Intent" doc:id="520085ed-395d-4b3f-8aaa-4d17aa978fdf">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
 {
 		"version": "1.0",
		"response": {
			"outputSpeech": {
				"type": "SSML",
				"ssml": "<speak>All of your binance account's open orders have been successfully cancelled.</speak>"
			},
			 "card": {
      "type": "Standard",
      "title": "Cancel All Orders :",
      "text": "All of your Binance account's open orders have been successfully cancelled." ,
      "image": {
        "largeImageUrl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTfrJPVO0wTlNLIZJfLMvkZnS2VrZUkMYkLeA&usqp=CAU"
      }
    },
			"reprompt": {
				"outputSpeech": {
					"type": "SSML",
					"ssml": "<speak>try again</speak>"
				}
			},
			"shouldEndSession": false
			}

	}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</otherwise>
		</choice>
	</flow>
</mule>
